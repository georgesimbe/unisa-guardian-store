# Friendly name for the workflow in GitHub
name: Continuous Integration (CI)
# Run the workflow each time code is pushed, or when a pull-request is created
on: [push, pull_request]

jobs:
  # Build the app
  build:
    # Configure the job
    name: Build
    runs-on: ubuntu-latest
    # Steps to run
    steps:
      - run: echo "Build the app..."
      - run: echo "Not implemented to save time when running the workflow"

  # Run security scans
  scan:
    # Configure the job
    name: Run security scans
    needs: build
    runs-on: ubuntu-latest

    # Steps to run
    steps:
      # Set up prerequisites for tests
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      # Java is required to run OWASP Dependency Check
      - uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "11"
      # Install node packages
      - run: npm ci

      # Add commands below to run SAST tests
      # OWASP Dependency Check
      # - Same command we ran manually during the practical
      # - '-s .' scans the current directory for a supported package list
      # - '-o .comp4035/output' sets the location of the scan output file
      - run: .comp4035/tools/dependency-check/bin/dependency-check.sh -s . -o .comp4035/output --disableAssembly

      # DevSkim
      # - Some CI support inbuilt tasks and scans, for  ease of use
      # - We could install and run DevSkim directly, but we can do it more easily using the DevSkim action
      # - See docs at: https://github.com/microsoft/DevSkim-Action
      - uses: microsoft/devskim-action@v1
        with:
          directory-to-scan: /
          should-scan-archives: false
          output-filename: devskim-results.sarif
          output-directory: .comp4035/output


      - name: Create output directory if it doesn't exist
        run: |
          if [ ! -d ".comp4035/output" ]; then
            mkdir -p .comp4035/output
          else
            echo "Directory .comp4035/output already exists"
          fi

      # OWASP ZAP Full Scan
      - name: OWASP ZAP Full Scan
        run: |
          mkdir .comp4035/output
          docker pull ghcr.io/zaproxy/zaproxy:stable
          docker run -v ${{ github.workspace }}/.comp4035/output:/zap/wrk/:rw ghcr.io/zaproxy/zaproxy:stable zap-full-scan.py \ 
          -t https://www.guardianstore.com -r /zap/wrk/zap-report.html

      # Publish the scan results as an artifact
      - uses: actions/upload-artifact@v2
        with:
          name: scan-results
          path: .comp4035/output

  # Deploy the app
  deploy:
    # Configure the job
    name: Deploy
    needs: scan
    runs-on: ubuntu-latest

    # Steps to run
    steps:
      - run: echo "Deploy the app..."
      - run: echo "Not implemented to save time when running the workflow"
